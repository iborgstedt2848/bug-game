#BlueJ class context
comment0.target=Converse
comment1.params=
comment1.target=Converse()
comment2.params=
comment2.target=boolean\ greeting()
comment2.text=\n\ greeting()\ method\ asks\ the\ user\ to\ input\ a\ name\ or\ enter\ quit\ (case\n\ insensitive)\ to\ exit\ the\ program.\ It\ takes\ in\ the\ user\ input\ and\ evaulates\n\ whether\ or\ not\ the\ user\ entered\ "quit.\ It\ defaults\ to\ "Player\ 1"\n\ if\ the\ user\ inputs\ nothing.\ Otherwise,\ it\ sets\ the\ user's\ input\n\ to\ the\ name\ of\ the\ player.\n
comment3.params=
comment3.target=boolean\ floorSetup()
comment3.text=\n\ floorSetup()\ method\ asks\ the\ user\ to\ enter\ an\ integer\ value\ from\n\ 1-13.\ It\ takes\ in\ the\ input\ as\ a\ string\ and\ then\ attempts\ to\ type\n\ cast\ it\ to\ an\ int.\ If\ type\ cast\ is\ successful\ (input\ is\ an\ int),\ \n\ it\ will\ check\ to\ make\ sure\ that\ the\ integer\ is\ in\ range.\ If\ so,\ it\ \n\ sets\ the\ input\ to\ the\ floor\ size.\ If\ not,\ it\ sets\ the\ the\ default\ \n\ value\ to\ 3.\ If\ the\ type\ cast\ is\ unsuccessful\ (input\ is\ not\ an\ int),\n\ it\ will\ evaluate\ whether\ or\ not\ the\ string\ is\ equal\ to\ "quit"\ (case\n\ insensitive).\n
comment4.params=
comment4.target=boolean\ maximumMoves()
comment4.text=\n\ maximumMoves()\ method\ asks\ the\ user\ to\ enter\ an\ integer\ value\ from\n\ 1-10,000.\ It\ takes\ in\ the\ input\ as\ a\ string\ and\ then\ attempts\ to\ \n\ type\ cast\ it\ to\ an\ int.\ If\ type\ cast\ is\ successful\ (input\ is\ an\ \n\ int),it\ will\ check\ to\ make\ sure\ that\ the\ integer\ is\ in\ range.\ If\ \n\ so,\ it\ sets\ the\ input\ to\ the\ floor\ size.\ If\ not,\ it\ sets\ the\ the\ \n\ default\ value\ to\ 5,000.\ If\ the\ type\ cast\ is\ unsuccessful\ (input\ is\ \n\ not\ an\ int),it\ will\ evaluate\ whether\ or\ not\ the\ string\ is\ equal\ to\ \n\ "quit"\ (case\ insensitive).\n
comment5.params=
comment5.target=boolean\ placementSetup()
comment5.text=\n\ placementSetup()\ method\ takes\ in\ a\ letter\ and\ a\ number\ as\ the\n\ coordinates\ for\ the\ bug.\ It\ takes\ in\ the\ input\ as\ a\ string\ and\n\ evaluates\ whether\ or\ not\ it\ equals\ "quit"\ (case\ insensitive).\ Then,\n\ it\ establishes\ char\ a\ as\ the\ character\ at\ the\ first\ index\ of\ the\ \n\ input\ string.\ It\ establishes\ int\ b\ as\ the\ second\ index\ of\ the\ index\n\ string,\ type\ casted\ to\ an\ int\ using\ Integer.parseInt.\ Then,\ it\n\ enters\ an\ if\ statement\ that\ checks\ if\ int\ b\ in\ within\n\ range\ according\ to\ the\ floor\ size\ and\ if\ char\ a\ is\ within\ range\ \n\ based\ on\ the\ corresponding\ character\ values\ (+65\ from\ the\ int\ \n\ values).\ If\ both\ are\ in\ range,\ it\ sets\ a\ and\ b\ to\ row\ and\ col\ and\n\ the\ game\ commences.\ If\ not,\ it\ stays\ inside\ the\ do\ while\ loop,\ which\n\ continues\ to\ ask\ the\ user\ to\ try\ again\ until\ it\ meets\ the\ conditions.\n
numComments=6
